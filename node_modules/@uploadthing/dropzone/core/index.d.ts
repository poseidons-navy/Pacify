type AcceptProp = Record<string, string[]>;
type DropzoneState = {
    isFocused: boolean;
    isDragActive: boolean;
    isDragAccept: boolean;
    isDragReject: boolean;
    isFileDialogActive: boolean;
    acceptedFiles: File[];
};

/**
 * This is a forked version of the react-dropzone package, that's been minified
 * to suit UploadThing's needs and be easily portable to other frameworks than React.
 * See original source here: https://github.com/react-dropzone/react-dropzone
 * The original package is licensed under the MIT license.
 */

declare function isFileAccepted(file: File, accept: string | string[]): boolean;
declare function isEnterOrSpace(event: {
    key?: string;
    keyCode?: number;
}): boolean;
declare function isValidSize(file: File, minSize: number, maxSize: number): boolean;
declare function isValidQuantity(files: File[], multiple: boolean, maxFiles: number): boolean;
declare function allFilesAccepted({ files, accept, minSize, maxSize, multiple, maxFiles, }: {
    files: File[];
    accept: string | string[];
    minSize: number;
    maxSize: number;
    multiple: boolean;
    maxFiles: number;
}): boolean;
declare function isEventWithFiles(event: Partial<Event>): boolean;
declare function isIeOrEdge(ua?: string): boolean;
/**
 * Convert the `{accept}` dropzone prop to an array of MIME types/extensions.
 */
declare function acceptPropAsAcceptAttr(accept?: AcceptProp): string | undefined;
declare function noop(): void;
/**
 * ================================================
 *                    Reducer
 * ================================================
 */
type Payload<T extends keyof DropzoneState> = Pick<DropzoneState, T>;
type Focus = {
    type: "focus";
};
type Blur = {
    type: "blur";
};
type OpenDialog = {
    type: "openDialog";
};
type CloseDialog = {
    type: "closeDialog";
};
type SetDraggedFiles = {
    type: "setDraggedFiles";
    payload: Payload<"isDragActive" | "isDragAccept" | "isDragReject">;
};
type SetFiles = {
    type: "setFiles";
    payload: Payload<"acceptedFiles">;
};
type Reset = {
    type: "reset";
};
type DropzoneActions = Focus | Blur | OpenDialog | CloseDialog | SetDraggedFiles | SetFiles | Reset;
declare const initialState: {
    isFocused: boolean;
    isFileDialogActive: boolean;
    isDragActive: boolean;
    isDragAccept: boolean;
    isDragReject: boolean;
    acceptedFiles: File[];
};
declare function reducer(state: DropzoneState, action: DropzoneActions): DropzoneState;

export { acceptPropAsAcceptAttr, allFilesAccepted, initialState, isEnterOrSpace, isEventWithFiles, isFileAccepted, isIeOrEdge, isValidQuantity, isValidSize, noop, reducer };
