Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var shared = require('@uploadthing/shared');
var buttonClient = require('./button-client-C3Uk7VPA.cjs');
var dropzoneClient = require('./dropzone-client-cSMhzlFN.cjs');
var uploaderClient = require('./uploader-client-BZAcIJ23.cjs');
var react = require('@uploadthing/dropzone/react');

const generateUploadButton = (opts)=>{
    const url = shared.resolveMaybeUrlArg(opts?.url);
    const TypedButton = (props)=>/*#__PURE__*/ jsxRuntime.jsx(buttonClient.UploadButton, {
            ...props,
            url: url
        });
    return TypedButton;
};
const generateUploadDropzone = (opts)=>{
    const url = shared.resolveMaybeUrlArg(opts?.url);
    const TypedDropzone = (props)=>/*#__PURE__*/ jsxRuntime.jsx(dropzoneClient.UploadDropzone, {
            ...props,
            url: url
        });
    return TypedDropzone;
};
const generateUploader = (opts)=>{
    const url = shared.resolveMaybeUrlArg(opts?.url);
    const TypedUploader = (props)=>/*#__PURE__*/ jsxRuntime.jsx(uploaderClient.Uploader, {
            ...props,
            url: url
        });
    return TypedUploader;
};
/**
 * @deprecated - use {@link generateUploadButton}, {@link generateUploadDropzone}, and {@link generateUploader} instead
 */ function generateComponents(initOpts) {
    return {
        UploadButton: generateUploadButton(initOpts),
        UploadDropzone: generateUploadDropzone(initOpts),
        Uploader: generateUploader(initOpts)
    };
}

exports.UploadButton = buttonClient.UploadButton;
exports.generateReactHelpers = buttonClient.generateReactHelpers;
exports.UploadDropzone = dropzoneClient.UploadDropzone;
exports.Uploader = uploaderClient.Uploader;
Object.defineProperty(exports, "useDropzone", {
  enumerable: true,
  get: function () { return react.useDropzone; }
});
exports.generateComponents = generateComponents;
exports.generateUploadButton = generateUploadButton;
exports.generateUploadDropzone = generateUploadDropzone;
exports.generateUploader = generateUploader;
