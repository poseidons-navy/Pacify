import * as __server from '../server/index.js';
import * as __internal_types from '../internal/types.js';
import { FileRouter, RouteHandlerOptions } from '../internal/types.js';
export { FileRouter, UTFiles } from '../internal/types.js';
import * as _uploadthing_shared from '@uploadthing/shared';
import { Json, UploadThingError } from '@uploadthing/shared';
import { NextRequest } from 'next/server';

type CreateBuilderOptions<TErrorShape extends Json> = {
    errorFormatter: (err: UploadThingError) => TErrorShape;
};

declare const createUploadthing: <TErrorShape extends Json>(opts?: CreateBuilderOptions<TErrorShape>) => (input: _uploadthing_shared.FileRouterInputConfig) => __internal_types.UploadBuilder<{
    _input: "unsetMarker" & {
        __brand: "unsetMarker";
    };
    _metadata: "unsetMarker" & {
        __brand: "unsetMarker";
    };
    _middlewareArgs: {
        req: NextRequest;
        res: undefined;
        event: undefined;
    };
    _errorShape: TErrorShape;
    _errorFn: "unsetMarker" & {
        __brand: "unsetMarker";
    };
    _output: "unsetMarker" & {
        __brand: "unsetMarker";
    };
}>;
declare const createRouteHandler: <TRouter extends FileRouter>(opts: RouteHandlerOptions<TRouter>) => {
    POST: (req: NextRequest) => Promise<Response | __server.ResponseWithCleanup>;
    GET: (req: NextRequest) => Response;
};
/**
 * @deprecated Use {@link createRouteHandler} instead
 */
declare const createNextRouteHandler: <TRouter extends FileRouter>(opts: RouteHandlerOptions<TRouter>) => {
    POST: (req: NextRequest) => Promise<Response | __server.ResponseWithCleanup>;
    GET: (req: NextRequest) => Response;
};

export { createNextRouteHandler, createRouteHandler, createUploadthing };
