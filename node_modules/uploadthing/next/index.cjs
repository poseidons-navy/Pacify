Object.defineProperty(exports, '__esModule', { value: true });

var server = require('uploadthing/server');
var types = require('uploadthing/internal/types');

function defaultErrorFormatter(error) {
    return {
        message: error.message
    };
}

function internalCreateBuilder(initDef = {}) {
    const _def = {
        // Default router config
        routerConfig: {
            image: {
                maxFileSize: "4MB"
            }
        },
        inputParser: {
            parse: ()=>undefined,
            _input: undefined,
            _output: undefined
        },
        middleware: ()=>({}),
        onUploadError: ()=>({}),
        errorFormatter: initDef.errorFormatter ?? defaultErrorFormatter,
        // Overload with properties passed in
        ...initDef
    };
    return {
        input (userParser) {
            return internalCreateBuilder({
                ..._def,
                inputParser: userParser
            });
        },
        middleware (userMiddleware) {
            return internalCreateBuilder({
                ..._def,
                middleware: userMiddleware
            });
        },
        onUploadComplete (userUploadComplete) {
            return {
                _def,
                resolver: userUploadComplete
            };
        },
        onUploadError (userOnUploadError) {
            return internalCreateBuilder({
                ..._def,
                onUploadError: userOnUploadError
            });
        }
    };
}
function createBuilder(opts) {
    return (input)=>{
        return internalCreateBuilder({
            routerConfig: input,
            ...opts
        });
    };
}

const createUploadthing = (opts)=>createBuilder(opts);
const createRouteHandler = (opts)=>{
    const handlers = server.INTERNAL_DO_NOT_USE_createRouteHandlerCore(opts, "nextjs-app");
    return {
        POST: (req)=>handlers.POST(req),
        GET: (req)=>handlers.GET(req)
    };
};
/**
 * @deprecated Use {@link createRouteHandler} instead
 */ const createNextRouteHandler = createRouteHandler;

Object.defineProperty(exports, "UTFiles", {
  enumerable: true,
  get: function () { return types.UTFiles; }
});
exports.createNextRouteHandler = createNextRouteHandler;
exports.createRouteHandler = createRouteHandler;
exports.createUploadthing = createUploadthing;
